// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should handle basic enums: class 1`] = `
"declare var Label: {|
  +LABEL_OPTIONAL: 0, // 0
  +LABEL_REQUIRED: 1, // 1
  +LABEL_REPEATED: 2, // 2
|};
declare type A = $Values<typeof Label>;
declare type B = typeof Label.LABEL_OPTIONAL;
declare var n: typeof npm$namespace$n;

declare var npm$namespace$n: {|
  E: typeof n$E,
|};

declare export var n$E: {|
  +EM: 0, // 0
|};
declare type AA = $Values<typeof n$E>;
declare type BB = typeof n$E.EM;
"
`;

exports[`should handle empty enums: class 1`] = `
"declare var Empty: {||};
"
`;

exports[`should handle enum on imported module: class 1`] = `
"declare export var Label: {|
  +A: \\"A\\", // \\"A\\"
  +B: \\"B\\", // \\"B\\"
|};
export type LabelA = typeof Label.A;
export type LLabel = $Values<typeof Label>;
"
`;

exports[`should handle enum on imported module: class 2`] = `
"import * as m from \\"./export-enum-file\\";
declare export function foo(label: $Values<typeof m.Label>): void;
"
`;

exports[`should handle importing enum types: class 1`] = `
"declare export var Label: {|
  +A: \\"A\\", // \\"A\\"
  +B: \\"B\\", // \\"B\\"
|};
export type LabelA = typeof Label.A;
export type LLabel = $Values<typeof Label>;
"
`;

exports[`should handle importing enum types: class 2`] = `
"import typeof { Label } from \\"./export-enum-file\\";
declare export function foo(label: $Values<Label>): void;
"
`;

exports[`should handle importing enums: class 1`] = `
"declare export var Label: {|
  +A: \\"A\\", // \\"A\\"
  +B: \\"B\\", // \\"B\\"
|};
export type LabelA = typeof Label.A;
export type LLabel = $Values<typeof Label>;
"
`;

exports[`should handle importing enums: class 2`] = `
"declare export * from \\"./export-enum-file\\";
"
`;

exports[`should handle importing enums: class 3`] = `
"import { Label as ImportedLabel, LabelA, LLabel } from \\"./export-enum-file\\";
import {
  Label as ImportedLabelR,
  LabelA as LabelAR,
  LLabel as LLabelR,
} from \\"./reexport-enum-file\\";
declare export function foo(label: $Values<typeof Label>): void;
export type WM = typeof Label.A;
export type X = typeof Label.A;
export type Y = $Values<typeof Label>;
export type WR = $Values<typeof Label>;
export type WRM = typeof Label.A;
export type XR = typeof Label.A;
export type YR = $Values<typeof Label>;
"
`;

exports[`should handle number enums: class 1`] = `
"declare var Label: {|
  +ONE: 1, // 1
  +TWO: 2, // 2
  +THREE: 3, // 3
  +NEGATIVE: -123, // -123
  +DECIMAL: 3.14, // 3.14
|};
declare type A = $Values<typeof Label>;
declare type B = typeof Label.TWO;
"
`;

exports[`should handle string enums: class 1`] = `
"declare var Label: {|
  +LABEL_OPTIONAL: \\"LABEL_OPTIONAL\\", // \\"LABEL_OPTIONAL\\"
  +LABEL_REQUIRED: \\"LABEL_REQUIRED\\", // \\"LABEL_REQUIRED\\"
  +LABEL_REPEATED: \\"LABEL_REPEATED\\", // \\"LABEL_REPEATED\\"
|};
declare type A = $Values<typeof Label>;
declare type B = typeof Label.LABEL_REQUIRED;
"
`;
